% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/search_urban_center_progressive.R
\name{search_urban_center_progressive}
\alias{search_urban_center_progressive}
\title{Search progressively for nearest urban center (place = city)}
\usage{
search_urban_center_progressive(
  center_point,
  bbox,
  friction_extent = NULL,
  tr_corrected = NULL,
  raster_crs = NULL,
  max_search_multiplier = 50,
  search_increment = 2
)
}
\arguments{
\item{center_point}{An \code{sf} point (WGS84) representing the community center.}

\item{bbox}{Numeric vector defining the initial bounding box (\code{c(left, bottom, right, top)}).}

\item{friction_extent}{Optional \code{raster::extent} of the friction raster.}

\item{tr_corrected}{Optional \code{gdistance} TransitionLayer (geo-corrected) for travel time estimation.}

\item{raster_crs}{CRS of the friction raster.}

\item{max_search_multiplier}{Integer; maximum expansion factor for the bounding box (default = 50).}

\item{search_increment}{Integer; increment of expansion in each step (default = 2).}
}
\value{
Numeric; minimum estimated travel time (in minutes) to the nearest city, or \code{NA} if no city is found.
}
\description{
Expands the search area incrementally to find the nearest city in OpenStreetMap (\code{place = city}),
optionally calculating least-cost travel time using a friction surface.
}
\examples{
\dontrun{
tt_city <- search_urban_center_progressive(
  center_point, bbox,
  tr_corrected = tr, raster_crs = raster::crs(friction)
)
}

}
\keyword{internal}
