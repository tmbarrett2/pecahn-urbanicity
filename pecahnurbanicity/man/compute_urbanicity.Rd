% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/compute_urbanicity.R
\name{compute_urbanicity}
\alias{compute_urbanicity}
\title{Compute urbanicity metrics for a single community}
\usage{
compute_urbanicity(
  community_data,
  name = NULL,
  roads = TRUE,
  shops = TRUE,
  healthcare = TRUE,
  transport = TRUE,
  financial = TRUE,
  schools = TRUE,
  urban_center = TRUE,
  cell_towers = TRUE,
  buildings = TRUE,
  nighttime_light = TRUE,
  population = TRUE,
  search_buffer = 1,
  friction_surface_path = NULL,
  population_raster_path = NULL,
  nighttime_light_path = NULL,
  verbose = FALSE
)
}
\arguments{
\item{community_data}{A list containing community metadata (\code{bbox}, \code{project}, \code{ethnicity}, \code{community}).}

\item{name}{Optional character string naming the community.}

\item{roads, shops, healthcare, transport, financial, schools, urban_center, cell_towers, buildings, nighttime_light, population}{Logical flags controlling which metrics are computed.}

\item{search_buffer}{Numeric; degrees to expand the bounding box when cropping friction surfaces (default = 1).}

\item{friction_surface_path}{Path to the friction surface raster used for travel time calculations.}

\item{population_raster_path}{Path to the population density raster (e.g., GPW).}

\item{nighttime_light_path}{Path to the nighttime light raster (e.g., VIIRS).}

\item{verbose}{Logical; if \code{TRUE}, prints progress messages (default = \code{FALSE}).}
}
\value{
A one-row \code{data.frame} containing numeric and categorical urbanicity metrics for the specified community.
}
\description{
Computes multiple geospatial and infrastructural indicators of urbanicity for a single community,
including road access, facilities, travel times, building density, nighttime light intensity, and
population density. The function uses OpenStreetMap data combined with raster-based surfaces for
travel time and population estimates.
}
\details{
Travel time calculations rely on \code{gdistance::costDistance()} and a precomputed transition matrix derived
from the friction surface raster. OSM queries are automatically cached to minimize repeated downloads.
}
\examples{
\dontrun{
results <- compute_urbanicity(
  community_data = community_list[["Mandena"]],
  friction_surface_path = "friction_surface_walking.geotiff",
  population_raster_path = "pop_raster.tif",
  nighttime_light_path = "nighttime_lights.tif"
)
}

}
